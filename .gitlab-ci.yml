stages:
    - formatting
    - linting
    - conventional-commits-linting
    - compiling
    - unit-testing


quicksort-formatting:
    stage: formatting
    image: rust
    before_script:
        - rustup component add rustfmt
    script:
        - cd quicksort
        - cargo fmt --all -- --check
    rules:
        - if: $CI_MERGE_REQUEST_ID


quicksort-linting:
    stage: linting
    image: rust
    before_script:
        - rustup component add clippy
    script:
        - cd quicksort
        - cargo clippy --verbose --workspace --all-targets -- -D warnings
        - cargo clippy --verbose --workspace --all-targets --all-features -- -D warnings
        - cargo clippy --verbose --workspace --all-targets --no-default-features -- -D warnings
    rules:
        - if: $CI_MERGE_REQUEST_ID


conventional-commits-linting:
    stage: conventional-commits-linting
    image: rust
    before_script:
        - cargo install conventional_commits_linter
    script:
        - COMMON_ANCESTOR_COMMIT=`git merge-base origin/$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME`
        # Lint all the commits in the branch.
        - /usr/local/cargo/bin/conventional_commits_linter --from-commit-hash $COMMON_ANCESTOR_COMMIT --allow-angular-type-only
    rules:
        - if: $CI_MERGE_REQUEST_ID


quicksort-compiling:
    stage: compiling
    image: rust
    script:
        - cd quicksort
        - cargo build
    rules:
        - if: $CI_MERGE_REQUEST_ID
        - if: $CI_COMMIT_BRANCH == "master"


quicksort-unit-testing:
    stage: unit-testing
    image: rust
    script:
        - cd quicksort
        - cargo test --verbose --workspace
        - cargo test --verbose --workspace --all-features
        - cargo test --verbose --workspace --no-default-features
    rules:
        - if: $CI_MERGE_REQUEST_ID
        - if: $CI_COMMIT_BRANCH == "master"
