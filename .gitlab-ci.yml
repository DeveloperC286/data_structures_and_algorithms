stages:
  - clean-git-history-checking
  - conventional-commits-linting
  - formatting
  - linting
  - version-badge-checking
  - compiling
  - unit-testing


variables:
  SEMANTIC_VERSIONING_REGEX: "[0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*"


clean-git-history-checking:
  stage: clean-git-history-checking
  image: rust
  before_script:
    - cargo install clean_git_history
  script:
    # Check all the commits in the branch.
    - /usr/local/cargo/bin/clean_git_history --from-reference "origin/${CI_MERGE_REQUEST_TARGET_BRANCH_NAME}"
  rules:
    - if: $CI_MERGE_REQUEST_ID


conventional-commits-linting:
  stage: conventional-commits-linting
  image: rust
  before_script:
    - cargo install conventional_commits_linter
  script:
    # Lint all the commits in the branch.
    - /usr/local/cargo/bin/conventional_commits_linter --from-reference "origin/${CI_MERGE_REQUEST_TARGET_BRANCH_NAME}" --allow-angular-type-only
  rules:
    - if: $CI_MERGE_REQUEST_ID


include:
  - local: .gitlab/ci/binary_search/rust.yml
  - local: .gitlab/ci/heapsort/rust.yml
  - local: .gitlab/ci/least_recently_used_cache/rust.yml
  - local: .gitlab/ci/quicksort/rust.yml
  - local: .gitlab/ci/selection_sort/rust.yml
